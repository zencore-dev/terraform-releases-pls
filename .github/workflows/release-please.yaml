on:
  push:
    branches:
      - main
    paths:
      - modules/**

permissions:
  contents: write
  pull-requests: write
  packages: write

name: release-please-module
jobs:
  change-finder:
    runs-on: ubuntu-latest
    outputs:
      module-paths: ${{ steps.interrogate.outputs.module-paths }}
    steps:
      - uses: actions/checkout@v2
      - id: change-finder
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const {execSync} = require('child_process');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const latestRelease = await github.repos.getLatestRelease({
              owner,
              repo
            });
            console.log(`latest release: ${JSON.stringify(latestRelease.data)}`);
            execSync('git pull --tags');
            const status = execSync(`git diff --name-only ${latestRelease.data.tag_name} origin/master`, { encoding: 'utf-8'});
            console.log(status);
            const changes = status.split('\n');
            let modules_paths = new Set();
            for (const change of changes) {
              if (change.startsWith('modules/')) {
                  const library = change.split('/')[1];
                  modules_paths.add(library);
              };
            }
            modules_paths = Array.from(modules_paths);
            console.log(`::set-output name=module-paths::${JSON.stringify(modules_paths)}`);

  release-pr:
    runs-on: ubuntu-latest
    needs: change-finder
    strategy:
      fail-fast: false
      matrix:
        module: ${{fromJson(needs.change-finder.outputs.module-paths)}}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          path: modules/${{ matrix.module }}
          changelog-path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: terraform-module
          package-name: ${{ matrix.module }}
          monorepo-tags: true
          command: release-pr

  release-please-release:
    runs-on: ubuntu-latest
    needs: change-finder
    strategy:
      fail-fast: false
      matrix:
        module: ${{fromJson(needs.change-finder.outputs.module-paths)}}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: tag-release
        with:
          path: modules/${{ matrix.module }}
          changelog-path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: terraform-module
          monorepo-tags: true
          package-name: ${{ matrix.module }}
          command: github-release
